{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Ds_product_source",
						"type": "DatasetReference"
					},
					"name": "sourceproduct"
				},
				{
					"dataset": {
						"referenceName": "Ds_sales_source",
						"type": "DatasetReference"
					},
					"name": "sourcesales"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Ds_product_sink",
						"type": "DatasetReference"
					},
					"name": "joinconditionsink"
				}
			],
			"transformations": [
				{
					"name": "joinproductandsource"
				},
				{
					"name": "DropNullsproduct",
					"description": "Filtering rows using expression on columns 'product_id, Product_name, Category, Price,Quantity, store_location.\n\n\n "
				},
				{
					"name": "DropNullssales",
					"description": "Filtering rows using expression on columns 'product_id, Product_name, Category, Price,Quantity, store_location."
				}
			],
			"scriptLines": [
				"source(output(",
				"          product_id as integer,",
				"          product_name as string,",
				"          category as string,",
				"          price as decimal(10,0),",
				"          quantity as integer,",
				"          store_location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceproduct",
				"source(output(",
				"          product_id as integer,",
				"          product_name as string,",
				"          category as string,",
				"          price as decimal(10,0),",
				"          quantity as integer,",
				"          store_location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcesales",
				"DropNullsproduct, DropNullssales join(sourceproduct@store_location == sourcesales@store_location,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinproductandsource",
				"sourceproduct filter(!isNull(product_id)&&",
				"",
				"!isNull(product_name)&&",
				"",
				"!isNull(category)&&",
				"",
				"!isNull(price)&&",
				"",
				"!isNull(quantity)&&",
				"",
				"!isNull(store_location)) ~> DropNullsproduct",
				"sourcesales filter(!isNull(product_id)&&",
				"",
				"!isNull(product_name)&&",
				"",
				"!isNull(category)&&",
				"",
				"!isNull(price)&&",
				"",
				"!isNull(quantity)&&",
				"",
				"!isNull(store_location)) ~> DropNullssales",
				"joinproductandsource sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          product_id as string,",
				"          product_name as string,",
				"          category as string,",
				"          price as string,",
				"          quantity as string,",
				"          store_location as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> joinconditionsink"
			]
		}
	}
}