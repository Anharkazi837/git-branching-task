{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Ds_product_source",
						"type": "DatasetReference"
					},
					"name": "productsource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Ds_product_sink",
						"type": "DatasetReference"
					},
					"name": "productsink",
					"description": "Exporting  data to Ds_product_sink",
					"rejectedDataLinkedService": {
						"referenceName": "Ls_group_anu",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "FilterByPrice"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          product_id as integer,",
				"          product_name as string,",
				"          category as string,",
				"          price as decimal(10,0),",
				"          quantity as integer,",
				"          store_location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> productsource",
				"derivedColumn1 filter(toInteger(price)>=700 &&",
				"toInteger(price)<=1300) ~> FilterByPrice",
				"productsource derive(product_name = replace(product_name,\",\")) ~> derivedColumn1",
				"FilterByPrice sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          product_id as string,",
				"          product_name as string,",
				"          category as string,",
				"          price as string,",
				"          quantity as string,",
				"          store_location as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> productsink"
			]
		}
	}
}