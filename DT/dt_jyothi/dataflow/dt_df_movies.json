{
	"name": "dt_df_movies",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_source_gen2",
						"type": "DatasetReference"
					},
					"name": "LoadingAllMovies"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sink_gen2",
						"type": "DatasetReference"
					},
					"name": "nameMoviesink"
				}
			],
			"transformations": [
				{
					"name": "filterByYearComedy",
					"description": "Filtering rows using expression on column 'year' "
				},
				{
					"name": "AverageComedyRating",
					"description": "Aggregate data by 'year' producing\ncolumns 'AverageComedyRating'"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as string,",
				"          title as string,",
				"          genres as string,",
				"          year as string,",
				"          Rating as string,",
				"          {Rotton Tomato} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LoadingAllMovies",
				"LoadingAllMovies filter(toInteger(year) >= 1910 && toInteger(year) <= 2000 && rlike(genres, 'Comedy')) ~> filterByYearComedy",
				"filterByYearComedy aggregate(groupBy(movie),",
				"     Rating = avg(toInteger(Rating))) ~> AverageComedyRating",
				"AverageComedyRating sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> nameMoviesink"
			]
		}
	}
}