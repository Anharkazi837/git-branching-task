{
	"name": "Df_anu_join",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Ds_anu_product_source",
						"type": "DatasetReference"
					},
					"name": "productsource",
					"description": "Adding product source dataset"
				},
				{
					"dataset": {
						"referenceName": "Ds_anu_sales_source",
						"type": "DatasetReference"
					},
					"name": "salessource",
					"description": "Adding sales source dataset"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Ds_anu_product_sink",
						"type": "DatasetReference"
					},
					"name": "salesproductsink"
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          product_id as string,",
				"          product_name as string,",
				"          category as string,",
				"          price as string,",
				"          quantity as string,",
				"          store_location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> productsource",
				"source(output(",
				"          product_id as string,",
				"          product_name as string,",
				"          category as string,",
				"          price as string,",
				"          quantity as string,",
				"          store_location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> salessource",
				"productsource, salessource join(productsource@store_location == salessource@store_location,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> salesproductsink"
			]
		}
	}
}